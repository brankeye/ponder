extend type Query {
  poem(id: ID!): Poem
  poemDiscover: Poem
  poemLibrary(
    search: String
    first: Int
    after: String
    last: Int
    before: String
  ): PoemConnection
  poemRecents(
    search: String
    first: Int
    after: String
    last: Int
    before: String
  ): PoemConnection
}

extend type Mutation {
  poemView(id: ID!): Poem
  poemLibrary(id: ID!, inLibrary: Boolean!): Poem
}

type PoemConnection {
  edges: [PoemEdge]
  pageInfo: PageInfo!
}

type PoemEdge {
  cursor: String!
  node: Poem
}

type Poem {
  id: ID
  title: String
  teaser: [String]
  classification: String
  region: String
  period: String
  lines: [String]
  keywords: [String]
  inLibrary: Boolean
  inLibraryAt: Date
  viewedAt: Date
  author: Author
}
